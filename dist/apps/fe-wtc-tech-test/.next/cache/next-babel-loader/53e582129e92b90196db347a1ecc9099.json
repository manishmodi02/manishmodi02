{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { FormControlLabel, MenuList, MenuItem, Typography, Collapse } from '@material-ui/core';\nimport { Toggle } from '@mono-nx-test-with-nextjs/ui';\nimport CheckboxIcon from './checkboxIcon';\nimport SeeMore from './seeMore';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    filterItem: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginBottom: '20px'\n    },\n    menuItem: {\n      padding: '0 0 0 25px'\n    },\n    menuLabel: {\n      padding: '0 20px 4px'\n    },\n    menuList: {\n      padding: '0 0 2px'\n    },\n    category: {\n      fontWeight: 'bold'\n    }\n  });\n});\nexport var FilterItem = function FilterItem(_ref) {\n  _s2();\n\n  _s();\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$checkedList = _ref.checkedList,\n      checkedList = _ref$checkedList === void 0 ? {} : _ref$checkedList,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? null : _ref$onChange;\n\n  var _useState = useState({}),\n      collapsedIds = _useState[0],\n      setCollapsedId = _useState[1];\n\n  var classes = useStyles();\n\n  var handleSeeMoreToggle = function handleSeeMoreToggle(newState, id) {\n    setCollapsedId(_objectSpread(_objectSpread({}, collapsedIds), {}, _defineProperty({}, id, newState)));\n  };\n\n  var menuItems = Array.isArray(data) ? data : [data];\n  return __jsx(React.Fragment, null, menuItems.map(function (_ref2) {\n    var category = _ref2.category,\n        items = _ref2.items,\n        collapseItems = _ref2.collapseItems;\n    return __jsx(\"div\", {\n      key: category\n    }, __jsx(Typography, {\n      variant: \"body1\",\n      component: \"h6\",\n      className: \"\".concat(classes.menuLabel, \" \").concat(classes.category)\n    }, category), __jsx(Collapse, {\n      \"in\": collapsedIds[category],\n      collapsedHeight: 75\n    }, __jsx(MenuList, {\n      className: classes.menuList\n    }, items.map(function (label) {\n      return __jsx(MenuItem, {\n        className: classes.menuItem,\n        key: \"\".concat(category).concat(label)\n      }, __jsx(FormControlLabel, {\n        control: __jsx(Toggle, {\n          onChange: onChange,\n          id: label,\n          reset: Object.keys(checkedList).length === 0\n        }, __jsx(CheckboxIcon, {\n          checked: checkedList[label] || false\n        })),\n        label: label\n      }));\n    }))), __jsx(Toggle, {\n      onChange: handleSeeMoreToggle,\n      id: category\n    }, collapseItems && __jsx(SeeMore, {\n      open: collapsedIds[category]\n    })));\n  }));\n};\n\n_s2(FilterItem, \"0/128qAiYspRvbYKqZXZhCoFiPo=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = FilterItem;\n\n_s(FilterItem, \"PeQUBGYFwOjUzsiTdeH1nHkMHYU=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterItem;\nexport default FilterItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterItem\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"FilterItem\");","map":{"version":3,"sources":["C:/Users/ManishModi/Downloads/WTC/apps/fe-wtc-tech-test/app/components/filterItem/index.tsx"],"names":["useStyles","makeStyles","createStyles","filterItem","display","flexDirection","justifyContent","marginBottom","menuItem","padding","menuLabel","menuList","category","fontWeight","FilterItem","data","checkedList","onChange","collapsedIds","setCollapsedId","useState","classes","handleSeeMoreToggle","menuItems","Array","items","collapseItems","Object","label"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport {\r\n  FormControlLabel,\r\n  MenuList,\r\n  MenuItem,\r\n  Typography,\r\n  Collapse,\r\n} from '@material-ui/core';\r\nimport { Toggle } from '@mono-nx-test-with-nextjs/ui';\r\nimport {\r\n  MenuData,\r\n  CollapsedIdsObj,\r\n} from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\r\nimport CheckboxIcon from './checkboxIcon';\r\nimport SeeMore from './seeMore';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    filterItem: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      marginBottom: '20px',\r\n    },\r\n    menuItem: {\r\n      padding: '0 0 0 25px',\r\n    },\r\n    menuLabel: {\r\n      padding: '0 20px 4px',\r\n    },\r\n    menuList: {\r\n      padding: '0 0 2px',\r\n    },\r\n    category: {\r\n      fontWeight: 'bold',\r\n    },\r\n  })\r\n);\r\n\r\nexport const FilterItem = ({\r\n  data = [],\r\n  checkedList = {},\r\n  onChange = null,\r\n}: {\r\n  data: MenuData[];\r\n  checkedList: CollapsedIdsObj;\r\n  onChange: (newState: boolean, id: string) => void;\r\n}) => {\r\n  const [collapsedIds, setCollapsedId] = useState<CollapsedIdsObj>({});\r\n  const classes = useStyles();\r\n  const handleSeeMoreToggle = (newState, id) => {\r\n    setCollapsedId({ ...collapsedIds, [id]: newState });\r\n  };\r\n\r\n  const menuItems = Array.isArray(data) ? data : [data];\r\n\r\n  return (\r\n    <>\r\n      {menuItems.map(({ category, items, collapseItems }) => (\r\n        <div key={category}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"h6\"\r\n            className={`${classes.menuLabel} ${classes.category}`}\r\n          >\r\n            {category}\r\n          </Typography>\r\n          <Collapse in={collapsedIds[category]} collapsedHeight={75}>\r\n            <MenuList className={classes.menuList}>\r\n              {items.map((label) => {\r\n                return (\r\n                  <MenuItem\r\n                    className={classes.menuItem}\r\n                    key={`${category}${label}`}\r\n                  >\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Toggle\r\n                          onChange={onChange}\r\n                          id={label}\r\n                          reset={Object.keys(checkedList).length === 0}\r\n                        >\r\n                          <CheckboxIcon checked={checkedList[label] || false} />\r\n                        </Toggle>\r\n                      }\r\n                      label={label}\r\n                    />\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </MenuList>\r\n          </Collapse>\r\n          <Toggle onChange={handleSeeMoreToggle} id={category}>\r\n            {collapseItems && <SeeMore open={collapsedIds[category]} />}\r\n          </Toggle>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterItem;\r\n"]},"metadata":{},"sourceType":"module"}