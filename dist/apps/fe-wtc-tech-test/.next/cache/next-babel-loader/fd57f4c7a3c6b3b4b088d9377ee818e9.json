{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport { Theme } from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\nimport { ServerStyleSheet } from 'styled-components';\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(Html, {\n      lang: \"en\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: Theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const sheetStyledComponents = new ServerStyleSheet();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(sheetStyledComponents.collectStyles(__jsx(App, props)))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement(), sheetStyledComponents.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["C:/Users/ManishModi/Downloads/WTC/apps/fe-wtc-tech-test/pages/_document.tsx"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","Theme","ServerStyleSheet","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","sheetStyledComponents","originalRenderPage","renderPage","enhanceApp","App","props","collect","collectStyles","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,KAAT,QAAsB,4CAAtB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,eAAe,MAAMC,UAAN,SAAyBR,QAAzB,CAAkC;AAC/CS,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,MAAC,IAAD,QACE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,MADF,EAEE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC;AAFP,MAFF,CADF,EAQE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CARF,CADF;AAeD;;AAjB8C,C,CAoBjD;AACA;;AACAJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIV,iBAAJ,EAAf;AACA,QAAMW,qBAAqB,GAAG,IAAIT,gBAAJ,EAA9B;AACA,QAAMU,kBAAkB,GAAGH,GAAG,CAACI,UAA/B;;AAEAJ,EAAAA,GAAG,CAACI,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IACnBN,MAAM,CAACO,OAAP,CAAeN,qBAAqB,CAACO,aAAtB,CAAoC,MAAC,GAAD,EAASF,KAAT,CAApC,CAAf;AAFe,GAAD,CADpB;;AAMA,QAAMG,YAAY,GAAG,MAAMxB,QAAQ,CAACa,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,yCACKU,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CACN,GAAG1B,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CADG,EAENV,MAAM,CAACa,eAAP,EAFM,EAGNZ,qBAAqB,CAACY,eAAtB,EAHM;AAHV;AASD,CA7CD","sourcesContent":["import React from 'react';\r\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\r\nimport { ServerStyleSheets } from '@material-ui/core/styles';\r\nimport { Theme } from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\r\nimport { ServerStyleSheet } from 'styled-components';\r\n\r\nexport default class MyDocument extends Document {\r\n  render() {\r\n    return (\r\n      <Html lang=\"en\">\r\n        <Head>\r\n          <meta name=\"theme-color\" content={Theme.palette.primary.main} />\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n          />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </Html>\r\n    );\r\n  }\r\n}\r\n\r\n// `getInitialProps` belongs to `_document` (instead of `_app`),\r\n// it's compatible with server-side generation (SSG).\r\nMyDocument.getInitialProps = async (ctx) => {\r\n  // Resolution order\r\n  //\r\n  // On the server:\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. document.getInitialProps\r\n  // 4. app.render\r\n  // 5. page.render\r\n  // 6. document.render\r\n  //\r\n  // On the server with error:\r\n  // 1. document.getInitialProps\r\n  // 2. app.render\r\n  // 3. page.render\r\n  // 4. document.render\r\n  //\r\n  // On the client\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. app.render\r\n  // 4. page.render\r\n\r\n  // Render app and page and get the context of the page with collected side effects.\r\n  const sheets = new ServerStyleSheets();\r\n  const sheetStyledComponents = new ServerStyleSheet();\r\n  const originalRenderPage = ctx.renderPage;\r\n\r\n  ctx.renderPage = () =>\r\n    originalRenderPage({\r\n      enhanceApp: (App) => (props) =>\r\n        sheets.collect(sheetStyledComponents.collectStyles(<App {...props} />)),\r\n    });\r\n\r\n  const initialProps = await Document.getInitialProps(ctx);\r\n\r\n  return {\r\n    ...initialProps,\r\n    // Styles fragment is rendered after the app and page rendering finish.\r\n    styles: [\r\n      ...React.Children.toArray(initialProps.styles),\r\n      sheets.getStyleElement(),\r\n      sheetStyledComponents.getStyleElement(),\r\n    ],\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}