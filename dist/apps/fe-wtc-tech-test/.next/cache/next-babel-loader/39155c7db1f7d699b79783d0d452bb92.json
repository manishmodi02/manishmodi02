{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useMovies, MovieCard } from './index';\nimport { Container, Title, ListContainer, Grid } from './Home.styles';\n/* Home component Using the custom hook */\n\nexport var Home = function Home() {\n  _s2();\n\n  _s();\n\n  var _useMovies = useMovies(),\n      movies = _useMovies.movies,\n      updateMovieState = _useMovies.updateMovieState;\n\n  return __jsx(Container, null, __jsx(Title, {\n    \"data-testid\": \"count-title\"\n  }, \"Movies \", \"(\".concat(movies.length, \")\")), __jsx(ListContainer, null, __jsx(Grid, null, movies.map(function (movie, index) {\n    return __jsx(MovieCard, {\n      \"data-testid\": \"MovieCard-element\",\n      movie: movie,\n      updateMovieState: updateMovieState,\n      index: index\n    });\n  }))));\n};\n\n_s2(Home, \"7a0Fun5cobX2aVfM7PZpfjKXuWo=\", false, function () {\n  return [useMovies];\n});\n\n_c2 = Home;\n\n_s(Home, \"ApN+Z/Bq1L4o43q4SBNDe9vD+3Y=\", false, function () {\n  return [useMovies];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["C:/Users/ManishModi/Downloads/WTC/apps/fe-wtc-tech-test/pages/home/Home.tsx"],"names":["Home","movies","updateMovieState","useMovies","index"],"mappings":";;;;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,EAAA,SAAA,QAAA,SAAA;AACA,SAAA,SAAA,EAAA,KAAA,EAAA,aAAA,EAAA,IAAA,QAAA,eAAA;AAOA;;AACA,OAAO,IAAMA,IAAQ,GAAG,SAAXA,IAAW,GAAM;AAAA;;AAAA,EAAA,EAAA;;AAAA,MAAA,UAAA,GACWG,SADX,EAAA;AAAA,MAClBF,MADkB,GAAA,UAAA,CAAA,MAAA;AAAA,MACVC,gBADU,GAAA,UAAA,CAAA,gBAAA;;AAG1B,SACE,KAAA,CAAA,SAAA,EAAA,IAAA,EACE,KAAA,CAAA,KAAA,EAAA;AAAO,mBAAY;AAAnB,GAAA,EAAA,SAAA,EAAA,IAAA,MAAA,CAA6CD,MAAM,CAAnD,MAAA,EADF,GACE,CAAA,CADF,EAEE,KAAA,CAAA,aAAA,EAAA,IAAA,EACE,KAAA,CAAA,IAAA,EAAA,IAAA,EACG,MAAM,CAAN,GAAA,CAAW,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,WACV,KAAA,CAAA,SAAA,EAAA;AACE,qBADF,mBAAA;AAEE,MAAA,KAAK,EAFP,KAAA;AAGE,MAAA,gBAAgB,EAHlB,gBAAA;AAIE,MAAA,KAAK,EAAEG;AAJT,KAAA,CADU;AALpB,GAKS,CADH,CADF,CAFF,CADF;AAHG,CAAA;;IAAMJ,I;UAC4BG,S;;;MAD5BH,I;;GAAAA,I;UAC4BG,S;;;KAD5BH,I;AAsBX,eAAA,IAAA","sourcesContent":["\r\nimport React, { FC } from 'react';\r\nimport { useMovies, MovieCard } from './index';\r\nimport {\r\n    Container,\r\n    Title,\r\n    ListContainer,\r\n    Grid\r\n  } from './Home.styles';\r\n\r\n/* Home component Using the custom hook */\r\nexport const Home: FC = () => {\r\n    const { movies, updateMovieState } = useMovies();\r\n  \r\n    return (\r\n      <Container>\r\n        <Title data-testid=\"count-title\">Movies {`(${movies.length})`}</Title>\r\n        <ListContainer>\r\n          <Grid>\r\n            {movies.map((movie, index) => (\r\n              <MovieCard\r\n                data-testid=\"MovieCard-element\"\r\n                movie={movie}\r\n                updateMovieState={updateMovieState}\r\n                index={index}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </ListContainer>\r\n      </Container>\r\n    );\r\n  };\r\n  \r\n  export default Home;"]},"metadata":{},"sourceType":"module"}