{"ast":null,"code":"import { createMuiTheme } from '@material-ui/core/styles';\nexport var customTheme = {\n  palette: {\n    primary: {\n      main: '#455A64'\n    }\n  },\n  typography: {\n    fontFamily: 'Roboto'\n  },\n  cards: {\n    green: '#049452',\n    orange: '#ED6606',\n    yellow: '#EEC907',\n    white: '#FFF'\n  }\n};\nexport var Theme = createMuiTheme(customTheme);\nexport default Theme;\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/ManishModi/Downloads/WTC/apps/fe-wtc-tech-test/app/theme/theme.ts"],"names":["customTheme","palette","primary","main","typography","fontFamily","cards","green","orange","yellow","white","Theme","createMuiTheme"],"mappings":"AAAA,SAAA,cAAA,QAAA,0BAAA;AAYA,OAAO,IAAMA,WAAyB,GAAG;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AADF,GAD8B;AAMvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE;AADF,GAN2B;AASvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EADA,SAAA;AAELC,IAAAA,MAAM,EAFD,SAAA;AAGLC,IAAAA,MAAM,EAHD,SAAA;AAILC,IAAAA,KAAK,EAAE;AAJF;AATgC,CAAlC;AAgBP,OAAO,IAAMC,KAAK,GAAGC,cAAc,CAA5B,WAA4B,CAA5B;AAEP,eAAA,KAAA","sourcesContent":["import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles';\r\n\r\ntype Cards = { green: string; orange: string; yellow: string; white: string };\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n  interface Theme {\r\n    cards: Cards;\r\n  }\r\n  interface ThemeOptions {\r\n    cards?: Cards;\r\n  }\r\n}\r\n\r\nexport const customTheme: ThemeOptions = {\r\n  palette: {\r\n    primary: {\r\n      main: '#455A64',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: 'Roboto',\r\n  },\r\n  cards: {\r\n    green: '#049452',\r\n    orange: '#ED6606',\r\n    yellow: '#EEC907',\r\n    white: '#FFF',\r\n  },\r\n};\r\nexport const Theme = createMuiTheme(customTheme);\r\n\r\nexport default Theme;\r\n"]},"metadata":{},"sourceType":"module"}