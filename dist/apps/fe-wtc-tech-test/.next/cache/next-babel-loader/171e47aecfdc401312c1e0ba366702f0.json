{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { FormControlLabel, MenuList, MenuItem, Typography, Collapse } from '@material-ui/core';\nimport { Toggle } from '@mono-nx-test-with-nextjs/ui';\nimport CheckboxIcon from './checkboxIcon';\nimport SeeMore from './seeMore';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    filterItem: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginBottom: '20px'\n    },\n    menuItem: {\n      padding: '0 0 0 25px'\n    },\n    menuLabel: {\n      padding: '0 20px 4px'\n    },\n    menuList: {\n      padding: '0 0 2px'\n    },\n    category: {\n      fontWeight: 'bold'\n    }\n  });\n});\nexport var FilterItem = function FilterItem(_ref) {\n  _s();\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$checkedList = _ref.checkedList,\n      checkedList = _ref$checkedList === void 0 ? {} : _ref$checkedList,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? null : _ref$onChange;\n\n  var _useState = useState({}),\n      collapsedIds = _useState[0],\n      setCollapsedId = _useState[1];\n\n  var classes = useStyles();\n\n  var handleSeeMoreToggle = function handleSeeMoreToggle(newState, id) {\n    setCollapsedId(_objectSpread(_objectSpread({}, collapsedIds), {}, _defineProperty({}, id, newState)));\n  };\n\n  var menuItems = Array.isArray(data) ? data : [data];\n  return __jsx(React.Fragment, null, menuItems.map(function (_ref2) {\n    var category = _ref2.category,\n        items = _ref2.items,\n        collapseItems = _ref2.collapseItems;\n    return __jsx(\"div\", {\n      key: category\n    }, __jsx(Typography, {\n      variant: \"body1\",\n      component: \"h6\",\n      className: \"\".concat(classes.menuLabel, \" \").concat(classes.category)\n    }, category), __jsx(Collapse, {\n      \"in\": collapsedIds[category],\n      collapsedHeight: 75\n    }, __jsx(MenuList, {\n      className: classes.menuList\n    }, items.map(function (label) {\n      return __jsx(MenuItem, {\n        className: classes.menuItem,\n        key: \"\".concat(category).concat(label)\n      }, __jsx(FormControlLabel, {\n        control: __jsx(Toggle, {\n          onChange: onChange,\n          id: label,\n          reset: Object.keys(checkedList).length === 0\n        }, __jsx(CheckboxIcon, {\n          checked: checkedList[label] || false\n        })),\n        label: label\n      }));\n    }))), __jsx(Toggle, {\n      onChange: handleSeeMoreToggle,\n      id: category\n    }, collapseItems && __jsx(SeeMore, {\n      open: collapsedIds[category]\n    })));\n  }));\n};\n\n_s(FilterItem, \"PeQUBGYFwOjUzsiTdeH1nHkMHYU=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterItem;\nexport default FilterItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterItem\");","map":{"version":3,"sources":["C:/Users/ManishModi/Downloads/WTC/apps/fe-wtc-tech-test/app/components/filterItem/index.tsx"],"names":["React","useState","makeStyles","createStyles","FormControlLabel","MenuList","MenuItem","Typography","Collapse","Toggle","CheckboxIcon","SeeMore","useStyles","theme","filterItem","display","flexDirection","justifyContent","marginBottom","menuItem","padding","menuLabel","menuList","category","fontWeight","FilterItem","data","checkedList","onChange","collapsedIds","setCollapsedId","classes","handleSeeMoreToggle","newState","id","menuItems","Array","isArray","map","items","collapseItems","label","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport {\r\n  FormControlLabel,\r\n  MenuList,\r\n  MenuItem,\r\n  Typography,\r\n  Collapse,\r\n} from '@material-ui/core';\r\nimport { Toggle } from '@mono-nx-test-with-nextjs/ui';\r\nimport {\r\n  MenuData,\r\n  CollapsedIdsObj,\r\n} from '@mono-nx-test-with-nextjs/fe-wtc-tech-test';\r\nimport CheckboxIcon from './checkboxIcon';\r\nimport SeeMore from './seeMore';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    filterItem: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      marginBottom: '20px',\r\n    },\r\n    menuItem: {\r\n      padding: '0 0 0 25px',\r\n    },\r\n    menuLabel: {\r\n      padding: '0 20px 4px',\r\n    },\r\n    menuList: {\r\n      padding: '0 0 2px',\r\n    },\r\n    category: {\r\n      fontWeight: 'bold',\r\n    },\r\n  })\r\n);\r\n\r\nexport const FilterItem = ({\r\n  data = [],\r\n  checkedList = {},\r\n  onChange = null,\r\n}: {\r\n  data: MenuData[];\r\n  checkedList: CollapsedIdsObj;\r\n  onChange: (newState: boolean, id: string) => void;\r\n}) => {\r\n  const [collapsedIds, setCollapsedId] = useState<CollapsedIdsObj>({});\r\n  const classes = useStyles();\r\n  const handleSeeMoreToggle = (newState, id) => {\r\n    setCollapsedId({ ...collapsedIds, [id]: newState });\r\n  };\r\n\r\n  const menuItems = Array.isArray(data) ? data : [data];\r\n\r\n  return (\r\n    <>\r\n      {menuItems.map(({ category, items, collapseItems }) => (\r\n        <div key={category}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"h6\"\r\n            className={`${classes.menuLabel} ${classes.category}`}\r\n          >\r\n            {category}\r\n          </Typography>\r\n          <Collapse in={collapsedIds[category]} collapsedHeight={75}>\r\n            <MenuList className={classes.menuList}>\r\n              {items.map((label) => {\r\n                return (\r\n                  <MenuItem\r\n                    className={classes.menuItem}\r\n                    key={`${category}${label}`}\r\n                  >\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Toggle\r\n                          onChange={onChange}\r\n                          id={label}\r\n                          reset={Object.keys(checkedList).length === 0}\r\n                        >\r\n                          <CheckboxIcon checked={checkedList[label] || false} />\r\n                        </Toggle>\r\n                      }\r\n                      label={label}\r\n                    />\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </MenuList>\r\n          </Collapse>\r\n          <Toggle onChange={handleSeeMoreToggle} id={category}>\r\n            {collapseItems && <SeeMore open={collapsedIds[category]} />}\r\n          </Toggle>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterItem;\r\n"]},"metadata":{},"sourceType":"module"}