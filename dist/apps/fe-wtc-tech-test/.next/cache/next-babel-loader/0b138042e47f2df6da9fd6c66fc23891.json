{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Container, Title, ListContainer, Grid, CardContainer, Poster, PosterContainer, IconContainer, RatingsContainer, Ratings, StarsContainer } from './Home.styles';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nexport var useMovies = function useMovies() {\n  _s();\n\n  var _useState = useState([]),\n      movies = _useState[0],\n      setMovies = _useState[1];\n\n  var _useState2 = _slicedToArray(useState, 2),\n      saved = _useState2[0],\n      setSaved = _useState2[1];\n\n  useEffect(function () {\n    fetchMovies();\n  }, []);\n\n  var fetchMovies = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3333/api/movies');\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n\n              if (data.length) {\n                setMovies(data);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function fetchMovies() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateMovieState = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(movieId, body) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"http://localhost:3333/api/movies/id/\".concat(movieId), {\n                method: 'PUT',\n                headers: {\n                  accept: '*/*',\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: \"saved=\".concat(body.saved, \"&watched=\").concat(body.watched)\n              });\n\n            case 3:\n              response = _context2.sent;\n\n              if (response.status === 200) {\n                fetchMovies();\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function updateMovieState(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return {\n    movies: movies,\n    updateMovieState: updateMovieState\n  };\n};\n\n_s(useMovies, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\nvar StarRatings = function StarRatings(_ref3) {\n  var _ref3$ratings = _ref3.ratings,\n      ratings = _ref3$ratings === void 0 ? 0 : _ref3$ratings;\n  var starsArray = Array.from({\n    length: 5\n  });\n  return __jsx(StarsContainer, null, starsArray.map(function (i, index) {\n    return index >= Math.floor(ratings / 2) ? __jsx(StarBorderIcon, {\n      key: \"\".concat(i, \"-\").concat(index)\n    }) : __jsx(StarIcon, {\n      key: \"\".concat(i, \"-\").concat(index)\n    });\n  }));\n};\n\n_c = StarRatings;\nexport var MovieCard = function MovieCard(_ref4) {\n  _s2();\n\n  var movie = _ref4.movie,\n      index = _ref4.index,\n      updateMovieState = _ref4.updateMovieState;\n  var EyeIcon = useMemo(function () {\n    return movie.Watched === 'True' ? VisibilityIcon : VisibilityOffIcon;\n  }, [movie.Watched]);\n  var HeartIcon = useMemo(function () {\n    return movie.Saved === 'True' ? FavoriteIcon : FavoriteBorderIcon;\n  }, [movie.Saved]);\n  return __jsx(CardContainer, {\n    key: \"\".concat(movie.imdbID, \"-\").concat(index)\n  }, __jsx(IconContainer, null, __jsx(\"div\", {\n    \"data-testid\": \"view-btn-div\",\n    onClick: function onClick() {\n      return updateMovieState(movie.imdbID, {\n        watched: movie.Watched !== 'True',\n        saved: movie.Saved !== 'True'\n      });\n    }\n  }, __jsx(EyeIcon, null)), __jsx(\"div\", {\n    \"data-testid\": \"like-btn-div\"\n  }, __jsx(HeartIcon, null))), __jsx(PosterContainer, null, __jsx(Poster, {\n    src: movie.Poster\n  })), __jsx(RatingsContainer, {\n    \"data-testid\": \"rating-container\"\n  }, __jsx(Ratings, null, \"(\".concat(movie.imdbRating, \")\")), __jsx(StarRatings, {\n    ratings: Number(movie.imdbRating)\n  })));\n};\n\n_s2(MovieCard, \"4G1UKbs3UcMfBOxEUIWOoB19btk=\");\n\n_c2 = MovieCard;\n\nvar Home = function Home() {\n  _s3();\n\n  var _useMovies = useMovies(),\n      movies = _useMovies.movies,\n      updateMovieState = _useMovies.updateMovieState;\n\n  return __jsx(Container, null, __jsx(Title, {\n    \"data-testid\": \"count-title\"\n  }, \"Movies \", \"(\".concat(movies.length, \")\")), __jsx(ListContainer, null, __jsx(Grid, null, movies.map(function (movie, index) {\n    return __jsx(MovieCard, {\n      \"data-testid\": \"MovieCard-element\",\n      movie: movie,\n      updateMovieState: updateMovieState,\n      index: index\n    });\n  }))));\n};\n\n_s3(Home, \"ApN+Z/Bq1L4o43q4SBNDe9vD+3Y=\", false, function () {\n  return [useMovies];\n});\n\n_c3 = Home;\nexport default Home;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StarRatings\");\n$RefreshReg$(_c2, \"MovieCard\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"sources":["C:/Users/ManishModi/Downloads/WTC/apps/fe-wtc-tech-test/pages/home/index.tsx"],"names":["React","useEffect","useMemo","useState","Container","Title","ListContainer","Grid","CardContainer","Poster","PosterContainer","IconContainer","RatingsContainer","Ratings","StarsContainer","VisibilityIcon","FavoriteBorderIcon","FavoriteIcon","VisibilityOffIcon","StarIcon","StarBorderIcon","useMovies","movies","setMovies","saved","setSaved","fetchMovies","fetch","response","json","data","length","console","log","updateMovieState","movieId","body","method","headers","accept","watched","status","StarRatings","ratings","starsArray","Array","from","map","i","index","Math","floor","MovieCard","movie","EyeIcon","Watched","HeartIcon","Saved","imdbID","imdbRating","Number","Home"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useMemo, useState } from 'react';\n\nimport { Movie } from 'apps/fe-wtc-tech-test/types/movie';\nimport {\n  Container,\n  Title,\n  ListContainer,\n  Grid,\n  CardContainer,\n  Poster,\n  PosterContainer,\n  IconContainer,\n  RatingsContainer,\n  Ratings,\n  StarsContainer,\n} from './Home.styles';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nexport const useMovies = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [saved,setSaved] = useState\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('http://localhost:3333/api/movies');\n\n      const data: Movie[] = await response.json();\n\n      if (data.length) {\n        setMovies(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateMovieState = async (movieId, body) => {\n    try {\n      const response = await fetch(\n        `http://localhost:3333/api/movies/id/${movieId}`,\n        {\n          method: 'PUT',\n          headers: {\n            accept: '*/*',\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: `saved=${body.saved}&watched=${body.watched}`,\n        }\n      );\n\n      if (response.status === 200) {\n        fetchMovies();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return {\n    movies,\n    updateMovieState,\n  };\n};\n\nconst StarRatings: FC<{ ratings: number }> = ({ ratings = 0 }) => {\n  const starsArray = Array.from({ length: 5 });\n\n  return (\n    <StarsContainer>\n      {starsArray.map((i, index) =>\n        index >= Math.floor(ratings / 2) ? (\n          <StarBorderIcon key={`${i}-${index}`} />\n        ) : (\n          <StarIcon key={`${i}-${index}`} />\n        )\n      )}\n    </StarsContainer>\n  );\n};\n\ntype MovieCardProps = {\n  movie: Movie;\n  index: number;\n  updateMovieState: (movieId: string, body: object) => void;\n};\n\nexport const MovieCard: FC<MovieCardProps> = ({\n  movie,\n  index,\n  updateMovieState,\n}) => {\n  const EyeIcon = useMemo(\n    () => (movie.Watched === 'True' ? VisibilityIcon : VisibilityOffIcon),\n    [movie.Watched]\n  );\n\n  const HeartIcon = useMemo(\n    () => (movie.Saved === 'True' ? FavoriteIcon : FavoriteBorderIcon),\n    [movie.Saved]\n  );\n\n  return (\n    <CardContainer key={`${movie.imdbID}-${index}`}>\n      <IconContainer>\n        <div\n          data-testid=\"view-btn-div\"\n          onClick={() =>\n            updateMovieState(movie.imdbID, {\n              watched: movie.Watched !== 'True',\n              saved: movie.Saved !== 'True',\n            })\n          }\n        >\n          <EyeIcon />\n        </div>\n        <div data-testid=\"like-btn-div\">\n          <HeartIcon />\n        </div>\n      </IconContainer>\n      <PosterContainer>\n        <Poster src={movie.Poster} />\n      </PosterContainer>\n      <RatingsContainer data-testid=\"rating-container\">\n        <Ratings>{`(${movie.imdbRating})`}</Ratings>\n        <StarRatings ratings={Number(movie.imdbRating)} />\n      </RatingsContainer>\n    </CardContainer>\n  );\n};\n\nconst Home: FC = () => {\n  const { movies, updateMovieState } = useMovies();\n\n  return (\n    <Container>\n      <Title data-testid=\"count-title\">Movies {`(${movies.length})`}</Title>\n      <ListContainer>\n        <Grid>\n          {movies.map((movie, index) => (\n            <MovieCard\n              data-testid=\"MovieCard-element\"\n              movie={movie}\n              updateMovieState={updateMovieState}\n              index={index}\n            />\n          ))}\n        </Grid>\n      </ListContainer>\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}